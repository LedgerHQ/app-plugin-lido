name: Compilation & tests

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  job_build_debug_nano_s:
    name: Build debug Nano S
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Build Lido plugin for Nano S
        run: |
          make clean
          make BOLOS_SDK=$NANOS_SDK
          mv bin/app.elf lido_nanos.elf

      - name: Upload Lido binary
        uses: actions/upload-artifact@v2
        with:
          name: lido-app-plugin-debug
          path: ./lido_nanos.elf

  job_build_debug_nano_x:
    name: Build debug Nano X
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Build Lido plugin for Nano X
        run: |
          make clean
          make BOLOS_SDK=$NANOX_SDK
          mv bin/app.elf lido_nanox.elf

      - name: Upload Lido binary
        uses: actions/upload-artifact@v2
        with:
          name: lido-app-plugin-debug
          path: ./lido_nanox.elf

  scan-build:
    name: Clang Static Analyzer
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Build with Clang Static Analyzer
        run: |
          make clean
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: scan-build
          path: scan-build

  jobs-e2e-tests:
    needs: [job_build_debug_nano_s, job_build_debug_nano_x]
    runs-on: ubuntu-latest
    steps:
      - name: Test
        run: |
          id
          echo $HOME
          echo $DISPLAY
      - name: Checkout
        uses: actions/checkout@v2
      - run: sudo apt-get update -y && sudo apt-get install -y libusb-1.0.0 libudev-dev
      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: "14.4.0"
      - name: Install yarn
        run: |
          npm install -g yarn
      - name: Build/Install build js deps
        run: |
          cd tests && yarn install
      - name: Create tmp folder for artifacts
        run: |
          mkdir tests/tmp
      - name: Download app binaries
        uses: actions/download-artifact@v2
        with:
          path: tests/tmp
      - name: Gather elfs
        run: |
          cd tests/tmp
          cp `find . -name "*.elf"` ../elfs
      - name: Run zemu tests
        run: |
          cd tests && yarn test